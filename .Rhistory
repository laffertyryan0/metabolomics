set.seed(5);
setwd("/home/ryan/projects/metabolomics")
#read all fixed things from a json file init.json
params = rjson::fromJSON(file="./data/init.json")
cov_files = list.files(params$covariate_files)
K = length(cov_files)
cov_list = list()
for(i in 1:K){
cov_list[[i]] = read.csv2(paste(params$covariate_files,"/",cov_files[i],sep=""),
sep=",",header=FALSE)
cov_list[[i]] = matrix(data = as.numeric(unname(as.matrix(cov_list[[i]]))),
nrow = dim(unname(as.matrix(cov_list[[i]])))[1])
}
N = dim(cov_list[[1]])[1] #labs
P = dim(cov_list[[1]])[2] #covariates
K = length(cov_list) #metabolites
covariates = array(0,dim=c(N,P,K))
for(k in 1:K){
covariates[,,k] = cov_list[[k]]
}
beta = params$true_beta
b = params$true_b
pr = array(rep(0,N*K),dim = c(N,K))
missing = array(rep(0,N*K),dim = c(N,K))
for(lab_num in 1:N){
for(metabolite in 1:K){
pr[lab_num,metabolite] = pnorm(-1 + covariates[lab_num,,metabolite]%*%beta + b[lab_num])
missing[lab_num,metabolite] = rbinom(1,1,pr[lab_num,metabolite])
}
}
print("1 hi")
mets.in.some.lab.idx = (colSums(1-missing) > 0)  #boolean index showing TRUE where metabolite exists
#in at least one lab
data = data.frame(y = c(t(missing)),
lab_ind = seq(1,N)%x%rep(1,K))  #this is not the metabolite data, but the data for fitting missingness model
#    X1 = c(t(covariates[,1,]))#,
#    X2 = c(t(covariates[,2,])),
#   X3 = c(t(covariates[,3,])),
#  X4 = c(t(covariates[,4,]))
# )
varsumstr = ""
for(i in 1:P){
data = cbind(data,c(t(covariates[,i,])))
varname = paste("X",i,sep = "")
names(data)[i+2] = varname
varsumstr = paste(varsumstr,varname,"+")
}
print("2hi")
# y~X1 + X2 +.. +X_P + (1|lab_ind)
mod<-lme4::glmer(as.formula(paste("y ~",varsumstr," (1|lab_ind)")),
data = data, family=binomial("probit"))
samples.per.lab = params$samples_per_lab
mean = params$mean
corr = do.call("cbind",params$corr)
cov = diag(K)%*%corr%*%diag(K)
max.samp = max(samples.per.lab)
print("2.5hi")
met.data = list()
X = list()
lam = list()
for(i in 1:N){
met.data[[i]] = mvtnorm::rmvnorm(samples.per.lab[i],
mean=mean,
sigma = cov)
#ignore data for metabolites that are missing in every lab
met.data[[i]] = met.data[[i]][,mets.in.some.lab.idx]
X[[i]] = cor(met.data[[i]],method = "spearman")
lam[[i]] = 1/samples.per.lab[i]
}
print("3hi")
K.dropped = sum(mets.in.some.lab.idx)
delta = list()
p = list()
bihat = c(lme4::ranef(mod)$lab_ind[[1]])
for(i in 1:N){
print(i)
betas = coef(mod)[1]$lab_ind[i,]
delta[[i]] = matrix(rep(0,K*K),nrow=K)
p[[i]] = matrix(rep(0,K*K),nrow=K)
for(j1 in 1:K){
for(j2 in 1:K){
pr.est1 = pnorm(as.double(
bihat[i]  + covariates[i,,j1]%*%as.double(betas[-1])))
pr.est2 = pnorm(as.double(
bihat[i]  + covariates[i,,j2]%*%as.double(betas[-1])))
if(j1 == j2){
p[[i]][j1,j2] = 1 - pr.est1 #probability of being non-missing
delta[[i]][j1,j2] = as.integer((1 - missing[i,j1]))
}
else{
delta[[i]][j1,j2] = as.integer((1 - missing[i,j1])&(1-missing[i,j2]))
p[[i]][j1,j2] = (1 - pr.est1)*(1 - pr.est2)
}
}
}
}
pr.est1
pnorm(as.double(
bihat[i]  + covariates[i,,j1]%*%as.double(betas[-1])))
bihat
